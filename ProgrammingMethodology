<mxfile host="app.diagrams.net" modified="2021-10-04T17:43:59.237Z" agent="5.0 (Windows)" etag="FsMa6kZQoH_GYB9RFyV_" version="14.5.1" type="github">
  <diagram id="zQ4-V3rjiliO4CggKamS" name="Page-1">
    <mxGraphModel dx="1185" dy="650" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-3" value="Karel The Robot Class Diagram&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=1" vertex="1" parent="1">
          <mxGeometry x="240" y="160" width="320" height="40" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-9" value="Karel" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" vertex="1" parent="1">
          <mxGeometry x="310" y="200" width="170" height="164" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-10" value="- beeperBag : Beeper" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="26" width="170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-11" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="52" width="170" height="8" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-12" value="+ move(Void): Void&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="60" width="170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-18" value="+ turnLeft(Void): Void&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="86" width="170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-19" value="+ pickBeeper(Beeper): Void&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="112" width="170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-20" value="+ putBeeper(Beeper): Beeper&#xa;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" vertex="1" parent="WEfxWDvdRRLfGt2QhUMX-9">
          <mxGeometry y="138" width="170" height="26" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-22" value="" style="labelPosition=right;align=left;strokeWidth=1;shape=mxgraph.mockup.markup.curlyBrace;html=1;shadow=0;dashed=0;strokeColor=#999999;direction=north;" vertex="1" parent="1">
          <mxGeometry x="280" y="260" width="20" height="100" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-23" value="Methods(+)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="230" y="300" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-24" value="" style="labelPosition=right;align=left;strokeWidth=1;shape=mxgraph.mockup.markup.curlyBrace;html=1;shadow=0;dashed=0;strokeColor=#999999;direction=north;" vertex="1" parent="1">
          <mxGeometry x="280" y="230" width="20" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-25" value="Attributes(-)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="230" y="230" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-26" value="Java" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="1">
          <mxGeometry x="380" y="400" width="40" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-31" value="For Loop" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="430" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-32" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="450" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-29" value="&lt;div align=&quot;left&quot;&gt;for ( int i=0; i&amp;lt;3; i++){&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; turnLeft();&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;}&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="310" y="450" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-35" value="While Loop" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="530" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-36" value="&lt;div align=&quot;left&quot;&gt;while(&amp;nbsp; frontIsClear() ){&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; move();&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="310" y="550" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-37" value="IF statement" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="310" y="630" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-38" value="&lt;div&gt;if (&amp;nbsp; beepersPresent() ){&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pickBeeper();&lt;br&gt;&lt;/div&gt;&lt;div&gt;} else {&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; putBeeper();&lt;br&gt;&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="310" y="650" width="170" height="80" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-39" value="Common Errors" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="310" y="760" width="170" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-40" value="&lt;div align=&quot;left&quot;&gt;1. infinite loop&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;2. off by one bug&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;3. &lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="780" width="140" height="80" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-41" value="&lt;div align=&quot;left&quot;&gt;1. Write text using programming language called java&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;2. text files have an extension .java&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;3.&amp;nbsp; *.java file express what you want to do&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;4.&amp;nbsp; *.java get converted into binary( *.class files are created for each class inside a *.java file)&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;" vertex="1" parent="1">
          <mxGeometry x="440" y="880" width="520" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-43" value="&lt;div&gt;Text&lt;/div&gt;&lt;div&gt;*.java&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="880" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-45" value="" style="endArrow=classic;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="WEfxWDvdRRLfGt2QhUMX-43">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="350" y="1030" as="sourcePoint" />
            <mxPoint x="350" y="1000" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-46" value="Javac(JDK)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="355" y="960" width="70" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-47" value="Javac is computer program part of the JDK that converts*.java files in binary (*.class files)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="440" y="960" width="260" height="40" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-48" value="" style="endArrow=none;dashed=1;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="WEfxWDvdRRLfGt2QhUMX-46" target="WEfxWDvdRRLfGt2QhUMX-47">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="530" y="1030" as="sourcePoint" />
            <mxPoint x="580" y="980" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-49" value="&lt;div&gt;Binary&lt;br&gt;*.class&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="1000" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-50" value="&lt;div&gt;Computer &lt;br&gt;&lt;/div&gt;&lt;div&gt;Program&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="1110" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-51" value="" style="endArrow=classic;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="WEfxWDvdRRLfGt2QhUMX-49" target="WEfxWDvdRRLfGt2QhUMX-50">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="380.24" y="1070" as="sourcePoint" />
            <mxPoint x="380" y="1130" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-52" value="JVM(Java Virtual Machine)" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="360" y="1070" width="150" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-53" value="&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;JVM is part of the JRE(Java Runtime Environment).&amp;nbsp; JRE runs the JVM, which in turn runs the binary *.class files.&lt;br&gt;&lt;/div&gt;&lt;div&gt;*.class files are then ran by the JVM.&amp;nbsp; why use virtual machine? because we can guarantee the program runs in the same environment every time, despite being in varying PC or Mac.&lt;/div&gt;&lt;div&gt;&lt;br&gt; &lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="520" y="1080" width="370" height="80" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-54" value="" style="endArrow=none;dashed=1;html=1;entryX=0;entryY=0.25;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="WEfxWDvdRRLfGt2QhUMX-52" target="WEfxWDvdRRLfGt2QhUMX-53">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="440" y="1170" as="sourcePoint" />
            <mxPoint x="490" y="1120" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-55" value="&lt;div align=&quot;left&quot;&gt;&lt;b&gt;Java has eight primitive types:&lt;/b&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;int -&lt;/b&gt; by default, the &lt;i&gt;int &lt;/i&gt;data type is an 32-bit signed two&#39;s complement integer.&amp;nbsp; Its min value is -2^31 and max value is 2^31-1.&amp;nbsp; In Java 8 and later you &lt;i&gt;int &lt;/i&gt;to represent unsigned 32-bit integer, which as a min value of 0 and max value of 2^32-1.&amp;nbsp; Use the integer class to use the &lt;i&gt;int &lt;/i&gt;data type as unsigned integer. &lt;br&gt;&lt;b&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;short &lt;/b&gt;- The &lt;i&gt;short&lt;/i&gt; data type is 16bit signed two&#39;s complement integer, which has a min value of -32,768 and max of 32,767.&amp;nbsp; The &lt;i&gt;short &lt;/i&gt;data type can be useful for saving memory&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;long &lt;/b&gt;- The &lt;i&gt;long &lt;/i&gt;data type is 64-bit unsigned two&#39;s complement integer, which has a min value of -2^63 and max value of 2^63-1. In Java SE 8 and later, you can also use &lt;i&gt;long &lt;/i&gt;data type as unsigned, which has min value of 0 and max value of 2^64-1.&amp;nbsp; Use this data type when then range of values is wider than &lt;i&gt;int&lt;/i&gt;.&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;double &lt;/b&gt;- The &lt;i&gt;double &lt;/i&gt;data type is a double-precision 64-bit IEEE floating point.&amp;nbsp; For decimal value this data type is generally the default choice.&amp;nbsp; For precision this data type should be avoided...ie currency.&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;float &lt;/b&gt;- The &lt;i&gt;float &lt;/i&gt;data&amp;nbsp;&lt;i&gt; &lt;/i&gt;type is a 32-bit IEEE 754 floating point.&amp;nbsp; It should never be used for precision, such as currency.&amp;nbsp; Use &lt;i&gt;float&lt;/i&gt; over &lt;i&gt;double&lt;/i&gt; if you need to save memory in large arrays of floating numbers. &lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;char &lt;/b&gt;- The &lt;i&gt;char &lt;/i&gt;data type is a single 16-bit Unicode character.&amp;nbsp; It has minimum value of &#39;\u0000&#39; (or 0)&lt;br&gt;and maximum value of &#39;\uffff&#39; (or 65, 535 inclusive).&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;boolean &lt;/b&gt;- The &lt;i&gt;boolean &lt;/i&gt;data type is has only two possible values: &lt;i&gt;true&lt;/i&gt; or &lt;i&gt;false&lt;/i&gt;. Use this data type for simple flags that tracks true/false conditions.&amp;nbsp; This data type represents one bit of information, but its &#39;size&#39; isn&#39;t something that&#39;s precisely defined. &lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;byte &lt;/b&gt;- is 8-bit signed two&#39;s complement integer. The smallest value is -128, and largest is 127 (inclusive).&amp;nbsp; The byte data type can be useful for saving memory.&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="1260" width="590" height="270" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-56" value="&lt;div&gt;In addition to the 8 primitives, the Java programming language also provides special support for character strings via the &lt;b&gt;java.lang.String &lt;/b&gt;class.&amp;nbsp; Enclosing your characters within double quote will automatically create a new &lt;b&gt;String&lt;/b&gt; object.&lt;/div&gt;&lt;div&gt;for example, &lt;i&gt;String s = &quot;this is a string&quot; ;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;String objects are immutable.&lt;/div&gt;&lt;div&gt;The String object is not considered a primitive data type but given the special support it receives from the language you might consider it is. &lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="1630" width="590" height="20" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-57" value="&lt;div&gt;&lt;b&gt;Java Classes and Objects&lt;/b&gt;&lt;/div&gt;&lt;div&gt;in Java there can only be only&amp;nbsp; one public class in each .java file, however we can have as many private class as desired.&amp;nbsp; The java class name will correspond with the file .java file name.&amp;nbsp; IE Fruit class will have Fruit.java file.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Classes can contain 2 things.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. Data - which is the current state of the object.&lt;/div&gt;&lt;div&gt;2. Subroutines (methods) - or behaviors&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;We call data in a Class Instances variables(Data or &quot;state&quot;)&lt;/div&gt;&lt;div&gt;We call subroutines in a class a method&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontStyle=0" vertex="1" parent="1">
          <mxGeometry x="320" y="1720" width="580" height="200" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-58" value="&lt;div align=&quot;left&quot;&gt;&lt;b&gt;Java is pass-by-value language&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;Java is always &lt;strong&gt;pass-by-value&lt;/strong&gt;.  Unfortunately, when we deal with objects we are really dealing with object-handles called &lt;em&gt;references&lt;/em&gt; which are passed-by-value as well.  This terminology and semantics easily confuse many beginners.&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;https://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="1960" width="660" height="100" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-59" value="&lt;div align=&quot;left&quot;&gt;&lt;b&gt;Java Class Constructors&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;Constructors are special public methods that run every time instance of the class is created, and has no return type. &lt;br&gt;&lt;/li&gt;&lt;li&gt;Constructor name are the same as its&#39; class name, &lt;br&gt;&lt;/li&gt;&lt;li&gt;We can have multiple Constructors, because Constructors can have parameters.&amp;nbsp; Although the constructor have the same name, as long as the parameters differes, Java will be able to automatically recognize with Constructor to use base our the parameter signature(Neat!)&lt;/li&gt;&lt;li&gt;We can also call Constructors within Constructors&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;b&gt;Why use Constructors?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;often used to initialize instance variables&lt;/li&gt;&lt;li&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="2080" width="440" height="190" as="geometry" />
        </mxCell>
        <mxCell id="WEfxWDvdRRLfGt2QhUMX-60" value="&lt;div&gt;&lt;b&gt;static vs instance&lt;/b&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;static variables are Class variables.&amp;nbsp; Instances do not have copy of the static variable, they get access to them through the class.&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div align=&quot;left&quot;&gt;static variable and method belong to the class.&amp;nbsp; static method and variable can access other static variable/method but not instance variable or method&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="320" y="2300" width="380" height="170" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
